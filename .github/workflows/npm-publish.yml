name: Node.js CI with Docker Deploy

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v3

    # Node.js 설정
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # .env 파일 생성
    - name: Create .env file from ENV
      run: |
        echo "${{ secrets.ENV }}" > .env
        echo "Generated .env file:"
        cat .env
        ls -l .env
      shell: bash
      
    # .env 초기화
    - name: Initialize remote .env path
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          if [ -d "/home/ubuntu/.env" ]; then
            echo ".env is a directory. Removing it..."
            sudo rm -rf /home/ubuntu/.env
          elif [ -f "/home/ubuntu/.env" ]; then
            echo ".env is a file. Removing it..."
            sudo rm /home/ubuntu/.env
          else
            echo ".env does not exist."
          fi
    
    # .env 파일 전송
    - name: Transfer .env to remote server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        source: ".env"
        target: "/home/ubuntu/.env"
        overwrite: true

    # 전송 후 검증
    - name: Verify .env file on remote server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          if [ -d "/home/ubuntu/.env" ]; then
            echo "Error: .env is a directory!"
            exit 1
          elif [ -f "/home/ubuntu/.env" ]; then
            echo ".env is a valid file."
            cat /home/ubuntu/.env
          else
            echo "Error: .env does not exist."
            exit 1
          fi

    # Node.js 프로젝트 의존성 설치 및 빌드
    - name: Install dependencies and build
      run: |
        npm install
        npm run build

    # 도커 이미지 빌드 및 Docker Hub에 푸시
    - name: Build and push Docker image
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }} .
        docker push ${{ secrets.DOCKER_REPO }}

    # 원격 서버에 접속 후 도커 이미지 Pull 및 실행
    - name: Deploy to remote server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}
          docker-compose up -d
          docker image prune -f
